{
    "apiVersion": "1.0",
    "swaggerVersion": "1.1",
    "basePath": "https://localhost:1611/api/1",
    "resourcePath": "/device",
    "apis": [             
    {
            "path": "/device/{deviceId}",
            "description": "Get the list of device attributes",
            "operations": [
                {
                    "httpMethod": "GET",
                    "summary": "Get the list of device attributes",
                    "notes": "This operation returns all attributes of a specific device. Multiple device Ids are not allowed.",
                    "responseClass": "DeviceAttributesInfo: This class returns the attributs found for a specific device.",
                    "nickname": "fetchDevice",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/financial",
            "description": "Get the list of financial attributes of a device",
            "operations": [
                {
                    "httpMethod": "GET",
                    "summary": "Get the list of financial attributes of a device",
                    "notes": "This operation returns all financial attributes and their values of a specific device. Multiple device Ids are not allowed.",
                    "responseClass": "DeviceFinancialAttributes: This class returns all financial attributes and their values of a specific device.",
                    "nickname": "fetchDeviceFinancial",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/financial/summary",
            "description": "Get the financial summary of a device",
            "operations": [
                {
                    "httpMethod": "GET",
                    "summary": "Get the financial summary of a device",
					"notes": "This operation provides a overview over the financial assets of a specific device.",
                    "responseClass": "DeviceAssetFinancialSummary: This class returns a summary of al the financial data that is available for a specific device.",
                    "nickname": "fetchDeviceAssetSummaryFinancials",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },                                                
						{
                            "name": "language",
                            "description": "The language in which to display the results. Select the desired value from the drop-down box.",
                            "paramType": "query",
                            "defaultValue": "English",
                            "allowableValues": {
                                "valueType": "LIST",
                                "values": [
                                    "English",
                                    "Espanol",
                                    "Deutsch",
                                    "American",
                                    "Japanese",
                                    "Francais",
                                    "Brasileiro"
                                ]
                            },
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "externalLogin",
                            "description": "The login name of the external integration administrator who will execute the operation.",
                            "paramType": "query",
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/summary",
            "description": "Get asset summary of a device",
            "operations": [
                {
                    "httpMethod": "GET",
                    "summary": "Get asset summary of a device",
					"notes": "This operation provides an overview of main attribute values of a specific device. ",
                    "responseClass": "DeviceAssetSummaryResult: This class returns the information available on all attributs found for a specific device.",
                    "nickname": "fetchDeviceAssetSummary",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },                        
						{
                            "name": "language",
                            "description": "The language in which to display the results. Select the desired value from the drop-down box.",
                            "paramType": "query",
                            "defaultValue": "English",
                            "allowableValues": {
                                "valueType": "LIST",
                                "values": [
                                    "English",
                                    "Espanol",
                                    "Deutsch",
                                    "American",
                                    "Japanese",
                                    "Francais",
                                    "Brasileiro"
                                ]
                            },
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "externalLogin",
                            "description": "The login name of the external integration administrator who will execute the operation.",
                            "paramType": "query",
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/inventory/software/summary",
            "description": "Get a summary of all installed software of a device",
            "operations": [
                {
                    "httpMethod": "GET",
                    "summary": "Get a summary of all installed software of a device",
					"notes": "This operation provides the summary of softwares installed on a specific device, filters can be applied to limit the list to a specific type of softwares, such as those installed by the Add/Remove Program functionality or Web Browsers.",
                    "responseClass": "DeviceAssetSoftwareSummary: This class returns all the available software data of a specific device.",
                    "nickname": "fetchDeviceAssetSummarySoftware",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },                        
                        {
                            "name": "offset",
                            "description": "The offset from where on to start displaying the entries. To display all entries, enter 0 in this field as well as in the count field.",
                            "paramType": "query",
                            "defaultValue": 0,
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "count",
                            "description": "The number of entries to display at a time. To display all entries, enter 0 in this field as well as in the offset field.",
                            "paramType": "query",
                            "defaultValue": 100,
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "language",
                            "description": "The language in which to display the results. Select the desired value from the drop-down box.",
                            "paramType": "query",
                            "defaultValue": "English",
                            "allowableValues": {
                                "valueType": "LIST",
                                "values": [
                                    "English",
                                    "Espanol",
                                    "Deutsch",
                                    "American",
                                    "Japanese",
                                    "Francais",
                                    "Brasileiro"
                                ]
                            },
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "filterparam",
                            "description": "Select the type of software to display or via which way it was installed from the list. You may leave the field empty to display the result for all types.",
                            "paramType": "query",
                            "allowableValues": {
                                "valueType": "LIST",
                                "values": [
                                    "Add/Remove Programs",
                                    "Application",
                                    "MSI Database",
                                    "Web Browser"
                                ]
                            },							
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "externalLogin",
                            "description": "The login name of the external integration administrator who will execute the operation.",
                            "paramType": "query",
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/inventory/catalog/summary",
            "description": "Get a summary of licensed software of a device",
            "operations": [
                {
                    "httpMethod": "GET",
                    "summary": "Get a summary of licensed software of a device",
					"notes": "This operation finds all software that is installed on a specific device and that is part of the software catalog.",
                    "responseClass": "DeviceAssetCatalogSummary: This class returns the list of all software that is installed on a specific device and is included in the Software Catalog.",
                    "nickname": "fetchDeviceAssetSummaryCatalog",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },                        
                        {
                            "name": "offset",
                            "description": "The offset from where on to start displaying the entries. To display all entries, enter 0 in this field as well as in the count field.",
                            "paramType": "query",
                            "defaultValue": 0,
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "count",
                            "description": "The number of entries to display at a time. To display all entries, enter 0 in this field as well as in the offset field.",
                            "paramType": "query",
                            "defaultValue": 100,
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "language",
                            "description": "The language in which to display the results. Select the desired value from the drop-down box.",
                            "paramType": "query",
                            "defaultValue": "English",
                            "allowableValues": {
                                "valueType": "LIST",
                                "values": [
                                    "English",
                                    "Espanol",
                                    "Deutsch",
                                    "American",
                                    "Japanese",
                                    "Francais",
                                    "Brasileiro"
                                ]
                            },
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "externalLogin",
                            "description": "The login name of the external integration administrator who will execute the operation.",
                            "paramType": "query",
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/inventory/hardware/summary",
            "description": "Get the hardware summary of a device",
            "operations": [
                {
                    "httpMethod": "GET",
                    "summary": "Get the hardware summary of a device",
					"notes" : "This operation finds all hardware of a specific device.",
                    "responseClass": "DeviceAssetHardwareSummary: This class returns all the available hardware data of a specific device.",
                    "nickname": "fetchDeviceAssetSummaryHardware",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },                        
                        {
                            "name": "language",
                            "description": "The language in which to display the results. Select the desired value from the drop-down box.",
                            "paramType": "query",
                            "defaultValue": "English",
                            "allowableValues": {
                                "valueType": "LIST",
                                "values": [
                                    "English",
                                    "Espanol",
                                    "Deutsch",
                                    "American",
                                    "Japanese",
                                    "Francais",
                                    "Brasileiro"
                                ]
                            },
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "externalLogin",
                            "description": "The login name of the external integration administrator who will execute the operation.",
                            "paramType": "query",
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/object/{objectId}/insts",
            "description": "Get inventory instances of an object type of a device.",
            "operations": [
                {
                    "httpMethod": "GET",
                    "summary": "Get inventory instances of an object type of a device.",
                    "notes": "This operation finds all instances of a specific object type for a given device. Multiple values are not allowed.",
                    "responseClass": "DeviceInventoryInsts: This class returns the instances of a specific object type on a given device.",
                    "nickname": "getDeviceObjectInstances",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "objectId",
                            "description": "The unique Client Management database identifier of the object type. In the appendix you can find a list with the most commonly used object type IDs. Other object ids are returned via the GET /objects operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },    
    {
            "path": "/device/{deviceId}/windows/services",
            "description": "Get the list of services",
            "operations": [
                {
                    "httpMethod": "GET",
                    "summary": "Get the list of services",
					"notes": "This operation returns the list of all services of a device.",
                    "responseClass": "DeviceServiceInfo: This class provides the list of all Windows services on a specific device.",
                    "nickname": "searchDevice",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "Session-Id",
                            "description": "The unique identifier of the session. This identifier is recovered by executing the PUT /device/{deviceId}/session operation.",
                            "paramType": "header",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "offset",
                            "description": "The offset from where on to start displaying the entries. To display all entries, enter 0 in this field as well as in the count field.",
                            "paramType": "query",
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "count",
                            "description": "The number of entries to display at a time. To display all entries, enter 0 in this field as well as in the offset field.",
                            "paramType": "query",
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "sort",
                            "description": "Select from this drop-down box the parameter according to which the returned values are to be sorted, this may either be the name of the folder (name), the date at which the folder was created (createDate) or the date at which it was last modified (updateDate).",
                            "paramType": "query",
                            "defaultValue": "name",
                            "allowableValues": {
                                "valueType": "LIST",
                                "values": [
                                    "name", 
                                    "displayName", 
                                    "currentState", 
                                    "binaryPath", 
                                    "description", 
                                    "startName", 
                                    "startType"
                                ]
                            },
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "asc",
                            "description": "Select in this dropdown box if the sort order is to be ascending or descending.",
                            "paramType": "query",
                            "defaultValue": true,
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "boolean"
                        },
                        {
                            "name": "lan",
                            "description": "Select from this dropdown box the language in which the attributes are to be provided.",
                            "paramType": "query",
                            "defaultValue": "english",
                            "allowableValues": {
                                "valueType": "LIST",
                                "values": [
                                    "english",
                                    "espanol",
                                    "deutsch",
                                    "american",
                                    "japanese",
                                    "francais",
                                    "brasileiro"
                                ]
                            },
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/processes",
            "description": "Get the list of processes",
            "operations": [
                {
                    "httpMethod": "GET",
                    "summary": "Get the list of processes",
					"notes": "This operation returns the list of processes running on a specific device.",
                    "responseClass": "DeviceProcesses: This operation returns the list of processes running on a specific device.",
                    "nickname": "processesDevice",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "Session-Id",
                            "description": "The unique identifier of the session. This identifier is recovered by executing the PUT /device/{deviceId}/session operation.",
                            "paramType": "header",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 404,
                            "reason": ""
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/windows/registry/keys",
            "description": "Get the list of registry keys",
            "operations": [
                {
                    "httpMethod": "GET",
                    "summary": "Get the list of registry keys",
                    "notes": "This operation returns the list of registry keys under a specific key. Use only single slashes (/) in the registry path. Depending on the Windows operating system version accessing registry root keys like HKEY_CLASSES_ROOT, HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_USERS, HKEY_CURRENT_CONFIG HKLM may require additional administrator privileges.",
                    "responseClass": "DeviceRegistryKeys: This class returns the list of all registry keys of a specific key on a device.",
                    "nickname": "getRegistryKeysDevice",
                    "parameters": [
                    
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "Session-Id",
                            "description": "The unique identifier of the session. This identifier is recovered by executing the PUT /device/{deviceId}/session operation.",
                            "paramType": "header",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "path",
                            "description": "The path of the registry key.",
                            "paramType": "query",                            
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 404,
                            "reason": ""
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/windows/registry/values",
            "description": "Get the registry key values",
            "operations": [
                {
                    "httpMethod": "GET",
                    "summary": "Get the registry key values",
                    "notes": "This operation returns the values for a specific registry key. Use only single slashes (/) in the registry path. Depending on the Windows operating system version accessing registry root keys like HKEY_CLASSES_ROOT, HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_USERS, HKEY_CURRENT_CONFIG HKLM may require additional administrator privileges.",
                    "responseClass": "DeviceRegistryValues: This class returns the list of all registry values of a specific key.",
                    "nickname": "getRegistryValuesDevice",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "Session-Id",
                            "description": "The unique identifier of the session. This identifier is recovered by executing the PUT /device/{deviceId}/session operation.",
                            "paramType": "header",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "path",
                            "description": "The path of the registry key.",
                            "paramType": "query",                            
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 404,
                            "reason": ""
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/windows/event/categories",
            "description": "Get the list windows event categories",
            "operations": [
                {
                    "httpMethod": "GET",
                    "summary": "Get the list windows event categories",
					"notes": "This operation returns the list of Windows event categories for a specific device.",
                    "responseClass": "DeviceCategoryResultValues: This class returns the list of and information on the Windows event categories that are found on a device.",
                    "nickname": "getCategoryValuesDevice",
                    "parameters": [ 
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "Session-Id",
                            "description": "The unique identifier of the session. This identifier is recovered by executing the PUT /device/{deviceId}/session operation.",
                            "paramType": "header",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 404,
                            "reason": ""
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/windows/events",
            "description": "Get the list of Windows events",
            "operations": [
                {
                    "httpMethod": "GET",
                    "summary": "Get the list of Windows events",
					"notes": "This operation returns the list of Windows events for a specific device.",
                    "responseClass": "DeviceWindowsEventResult: This class returns the list of events found according to the specified criteria.",
                    "nickname": "getWindowsEventDevice",
                    "parameters": [ 
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "Session-Id",
                            "description": "The unique identifier of the session. This identifier is recovered by executing the PUT /device/{deviceId}/session operation.",
                            "paramType": "header",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "categoryindex",
                            "description": "The index, that is, the position at which the respective category was listed via the result of the GET /device/{deviceId}/windows/event/categories operation. The position numbering starts at 0.",
                            "paramType": "query",                            
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "offset",
                            "description": "The offset from where on to start displaying the entries. To display all entries, enter 0 in this field as well as in the count field.",
                            "paramType": "query",
                            "defaultValue": 0,
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "count",
                            "description": "The number of entries to display at a time. To display all entries, enter 0 in this field as well as in the offset field.",
                            "paramType": "query",
                            "defaultValue": 100,
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "int"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 404,
                            "reason": ""
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/filteredactions",
            "description": "Get the list of filtered actions",
            "operations": [
                {
                    "httpMethod": "GET",
                    "summary": "Get the list of filtered actions",
					"notes": "This operation return the list of actions and their availability, depending on the device properties and the administrator capabilities.",
                    "responseClass": "FilteredActionsResult: This class returns the list of actions with their availability status.",
                    "nickname": "filteredActions",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "externalLogin",
                            "description": "The login name of the external integration administrator who will execute the operation.",
                            "paramType": "query",
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "language",
                            "description": "The language in which to display the results. Select the desired value from the drop-down box.",
                            "paramType": "query",
                            "defaultValue": "English",
                            "allowableValues": {
                                "valueType": "LIST",
                                "values": [
                                    "English",
                                    "Espanol",
                                    "Deutsch",
                                    "American",
                                    "Japanese",
                                    "Francais",
                                    "Brasileiro"
                                ]
                            },
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/oprule/history",
            "description": "Get the list of assigned operational rules",
            "operations": [
                {
                    "httpMethod": "GET",
                    "summary": "Get the list of assigned operational rules",
					"notes": "This operation returns the list of operational rules that are currently assigned to a device.",
                    "responseClass": "OpRuleHistoryResult: This class returns the list of operational rules assigned to a specific device.",
                    "nickname": "opruleHistory",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "externalLogin",
                            "description": "The login name of the external integration administrator who will execute the operation.",
                            "paramType": "query",
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "language",
                            "description": "The language in which to display the results. Select the desired value from the drop-down box.",
                            "paramType": "query",
                            "defaultValue": "English",
                            "allowableValues": {
                                "valueType": "LIST",
                                "values": [
                                    "English",
                                    "Espanol",
                                    "Deutsch",
                                    "American",
                                    "Japanese",
                                    "Francais",
                                    "Brasileiro"
                                ]
                            },
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "offset",
                            "description": "The offset from where on to start displaying the entries. To display all entries, enter 0 in this field as well as in the count field.",
                            "paramType": "query",
                            "defaultValue": 0,
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "count",
                            "description": "The number of entries to display at a time. To display all entries, enter 0 in this field as well as in the offset field.",
                            "paramType": "query",
                            "defaultValue": 100,
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "int"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/jnlp",
            "description": "Create a jnlp file",
            "operations": [
                {
                    "httpMethod": "GET",
                    "summary": "Create a jnlp file",
					"notes": "This operation creates a JNLP file to launch the Console. BMC Client Management provides a Web Service action that returns the launch JNLP file. The file contains command lines necessary to launch the Client Management console and an access token. The access token is stored in memory and is an MD5 string build with the AdminId, the DeviceID, the context and the timestamp.",
                    "responseClass": "JnlpResult: This class returns the XML content of the JNLP file.",
                    "nickname": "jnlp",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "ctx",
                            "description": "Select the name of the command on which the Console is to open from the drop-down list.",
                            "paramType": "query",
                            "allowableValues": {
                                "valueType": "LIST",
                                "values": [
                                    "RemoteControl",
                                    "WakeUp",
									"Reboot",
                                    "Shutdown",
                                    "Ping",
                                    "ConfigSummary",
                                    "FileTransfer",
                                    "Registry",
									"FileSystem",
                                    "Processes",
                                    "Services",
                                    "Events"
                                ]
                            },
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "rctx",
                            "description": "Select the request context of the external integration if required.",
                            "paramType": "query",
							"allowableValues": {
                                "valueType": "LIST",
                                "values": [
                                    "RemoteControl",
                                    "WakeUp",
									"Reboot",
                                    "Shutdown",
                                    "Ping",
                                    "ConfigSummary",
                                    "FileTransfer",
                                    "Registry",
									"FileSystem",
                                    "Processes",
                                    "Services",
                                    "Events"
                                ]
                            },
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "externalLogin",
                            "description": "The login name of the external integration administrator who will execute the operation.",
                            "paramType": "query",
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/fs",
            "description": "Get the file system information",
            "operations": [
                {
                    "httpMethod": "GET",
                    "summary": "Get the file system information",
                    "notes": "This operation returns the list of drives of a device or the list of files and folders of a folder. If the path parameter is provided the response class is DeviceFileSystemDirInfo else DeviceFileSystemInfo is returned.",
                    "responseClass": "DeviceFileSystemInfo: This class returns the list of drives of a device.",
                    "nickname": "getDeviceObjectFSDir",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "Session-Id",
                            "description": "The unique identifier of the session. This identifier is recovered by executing the PUT /device/{deviceId}/session operation.",
                            "paramType": "header",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "path",
                            "description": "The absolute path of directory of which list of directories and files is  to be recovered. Use double backslashes (\\\\) in the path.",
                            "paramType": "query",
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "sort",
                            "description": "Select from this drop-down box the parameter according to which the returned values are to be sorted, this may either be the name of the file or folder (COREUTILS_ACTPRMVALUE_COLNAME_FILE), its size (COREUTILS_ACTPRMVALUE_COLNAME_SIZE), its access (COREUTILS_ACTPRMVALUE_COLNAME_ACCESS) or the date at which it was last modified (COREUTILS_ACTPRMVALUE_COLNAME_MODIFIED).",
                            "paramType": "query",
                            "required": false,
                            "allowableValues": {
                                "valueType": "LIST",
                                "values": [
                                    "COREUTILS_ACTPRMVALUE_COLNAME_FILE",
                                    "COREUTILS_ACTPRMVALUE_COLNAME_SIZE",
                                    "COREUTILS_ACTPRMVALUE_COLNAME_ACCESS",
                                    "COREUTILS_ACTPRMVALUE_COLNAME_MODIFIED"
                                ]
                            },
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "asc",
                            "description": "Select from this drop-down box in which order the sorting is applied, either ascending (true) or descending (false)",
                            "paramType": "query",
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "boolean",
                            "defaultValue": "true"
                        },
                        {
                            "name": "offset",
                            "description": "The offset from where on to start displaying the entries. To display all entries, enter 0 in this field as well as in the count field.",
                            "paramType": "query",
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "count",
                            "description": "The number of entries to display at a time. To display all entries, enter 0 in this field as well as in the offset field.",
                            "paramType": "query",
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                           "name": "lan",
                            "description": "Select from this dropdown box the language in which the attributes are to be provided.",
                            "paramType": "query",
                            "defaultValue": "english",
                            "allowableValues": {
                                "valueType": "LIST",
                                "values": [
                                    "english",
                                    "espanol",
                                    "deutsch",
                                    "american",
                                    "japanese",
                                    "francais",
                                    "brasileiro"
                                ]
                            },
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/fs/file",
            "description": "Get content of a specific file.",
            "operations": [
                {
                    "httpMethod": "GET",
                    "summary": "Get content of a specific file.",
					"notes": "This operation returns the data available for a specific file.",
                    "responseClass": "DeviceReadFile: This class returns information on a specific file and the requested content.",
                    "nickname": "getDeviceObjectFSFile",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "Session-Id",
                            "description": "The unique identifier of the session. This identifier is recovered by executing the PUT /device/{deviceId}/session operation.",
                            "paramType": "header",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "path",
                            "description": "The file name with the absolute path. Use double backslashes (\\\\) in the path.",
                            "paramType": "query",
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "decode",
                            "description": "Whether to decode file data that is read or display in encoded form.",
                            "paramType": "query",
                            "required": false,
                            "allowMultiple": false,
                            "defaultValue": "true",
                            "dataType": "boolean"
                        }
                        
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/financial/attachment",
            "description": "Get list of attachments for a device in Financial Asset Management module.",
            "operations": [
                {
                    "httpMethod": "GET",
                    "summary": "Get list of attachments for a device in Financial Asset Management module.",
					"notes": "This operation provides list of attachments for a device in Financial Asset Management module.",
                    "responseClass": "DeviceFamAttachArray: This class returns a list of attachments for a device in Financial Asset Management module.",
                    "nickname": "fetchDeviceFamAttachArray",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },                        
                        {
                            "name": "sort",
                            "description": "Select from this drop-down box the parameter according to which the returned values are to be sorted, this may either be the name of the file name, the id of file or the size of file attached.",
                            "paramType": "query",
                            "defaultValue": "name",
                            "allowableValues": {
                                "valueType": "LIST",
                                "values": [
                                    "FileID", 
                                    "FileName", 
                                    "FileSize"
                                ]
                            },
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "asc",
                            "description": "Select in this dropdown box if the sort order is to be ascending or descending.",
                            "paramType": "query",
                            "defaultValue": true,
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "boolean"
                        },
                        {
                            "name": "offset",
                            "description": "The offset from where on to start displaying the entries. To display all entries, enter 0 in this field as well as in the count field.",
                            "paramType": "query",
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "count",
                            "description": "The number of entries to display at a time. To display all entries, enter 0 in this field as well as in the offset field.",
                            "paramType": "query",
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "int"
                        }
                        ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/user",
            "description": "Get list of relationships between device and users.",
            "operations": [
                {
                    "httpMethod": "GET",
                    "summary": "Get list of relationships between device and users.",
					"notes": "This operation provides list of relationships between device and users.",
                    "responseClass": "DeviceUserRelations: This class returns a list of relations between a device and users.",
                    "nickname": "fetchDeviceUserRelationsArray",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },                        
                        {
                            "name": "sort",
                            "description": "Select from this drop-down box the parameter according to which the returned values are to be sorted, this may be the assignment id, the id of user, the user name, user domain, user login, relation type or auto update flag setting.",
                            "paramType": "query",
                            "defaultValue": "name",
                            "allowableValues": {
                                "valueType": "LIST",
                                "values": [
                                    "AssignID", 
                                    "UserID", 
                                    "UserName",
                                    "UserDomain", 
                                    "UserLogin", 
                                    "RelationName", 
                                    "DisabledAutoUpdate"
                                ]
                            },
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "asc",
                            "description": "Select in this dropdown box if the sort order is to be ascending or descending.",
                            "paramType": "query",
                            "defaultValue": true,
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "boolean"
                        },
                        {
                            "name": "offset",
                            "description": "The offset from where on to start displaying the entries. To display all entries, enter 0 in this field as well as in the count field.",
                            "paramType": "query",
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "count",
                            "description": "The number of entries to display at a time. To display all entries, enter 0 in this field as well as in the offset field.",
                            "paramType": "query",
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "int"
                        }
                        ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/windows/service",
            "description": "Manage the services of a device",
            "operations": [
                {
                    "httpMethod": "POST",
                    "summary": "Manage the services of a device",
					"notes": "This operation manages the services of a specific device.",
                    "responseClass": "DeviceServiceInfo: This class provides the list of all Windows services on a specific device.",
                    "nickname": "manageDeviceServices",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "Session-Id",
                            "description": "The unique identifier of the session. This identifier is recovered by executing the PUT /device/{deviceId}/session operation.",
                            "paramType": "header",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "name",
                            "description": "The name of the service, as returned by the GET /device/{deviceId}/windows/services operation.",
                            "paramType": "query",                            
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "do",
                            "description": "Select the action to perform on the specified service from the drop-down list.",
                            "paramType": "query",
                            "allowableValues": {
                                "valueType": "LIST",
                                "values": [
                                    "start", 
                                    "stop",
                                    "restart"
                                ]
                            },
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 404,
                            "reason": ""
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/ping",
            "description": "Ping a device",
            "operations": [
                {
                    "httpMethod": "POST",
                    "summary": "Ping a device",
					"notes": "This operation pings a device.",
                    "responseClass": "DeviceResult: This class returns the result of a ping operation.",
                    "nickname": "pingDevice",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path":  "/device/{deviceId}/shutdown",
            "description": "Shutdown or reboot a device",
            "operations": [
                {
                    "httpMethod": "POST",
                    "summary": "Shutdown or reboot a device",
                    "notes": "This operation shuts down or reboots a specific device.",
                    "responseClass": "DeviceExit: This class returns the result of a device shutdown or reboot operation.",
                    "nickname": "shutdownDevice",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "Session-Id",
                            "description": "The unique identifier of the session. This identifier is recovered by executing the PUT /device/{deviceId}/session operation.",
                            "paramType": "header",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "reboot",
                            "description": "The shutdown operation to execute, i.e., if the device is to be rebooted (yes - default) or completely shut down (no).",
                            "paramType": "query",
                            "defaultValue": "yes",
                            "allowableValues": {
                                "valueType": "LIST",
                                "values": [
                                    "yes", 
                                    "no"
                                ]
                            },
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 404,
                            "reason": "Code 15 in readable format"
                        }
                    ]
                }
            ]
    },
    {
            "path":  "/device/{deviceId}/wakeup",
            "description": "Wake a device up",
            "operations": [
                {
                    "httpMethod": "POST",
                    "summary": "Wake a device up",
                    "notes": "This operation wakes up a specific device.",
                    "responseClass": "DeviceOperationResult: This class returns the final status of the executed operation, that is if it was successful or not, and if not the corresponding",
                    "nickname": "wakeupDevice",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "retrycount",
                            "description": "The number of retries, that is the number of times the wakeup operation is to be repeated if the wakeup fails.",
                            "paramType": "query",                            
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                         {
                            "name": "retryinterval",
                            "description": "The interval in seconds between two wakeup retries.",
                            "paramType": "query",                            
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "int"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 404,
                            "reason": "ErrorCode: 1"
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/audit",
            "description": "Audit a device",
            "operations": [
                {
                    "httpMethod": "POST",
                    "summary": "Audit a device",
                    "notes": "This operation audits a specific device.",
                    "responseClass": "DeviceOperationResult: This class returns the final status of the executed operation, that is if it was successful or not, and if not the corresponding",
                    "nickname": "auditDevice",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "externalLogin",
                            "description": "The login name of the external integration administrator who will execute the operation.",
                            "paramType": "query",
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        },                      
                        {
                            "name": "rctx",
                            "description": "Enter the request context of the external integration if required.",
                            "paramType": "query",
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 404,
                            "reason": ""
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/process",
            "description": "Start a process",
            "operations": [
                {
                    "httpMethod": "PUT",
                    "summary": "Start a process",
					"notes": "This operation launches a process on a device.",
                    "responseClass": "DeviceOperationResult: This class returns the final status of the executed operation, that is if it was successful or not, and if not the corresponding",
                    "nickname": "runprocessDevice",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },                        
                        {
                            "name": "Session-Id",
                            "description": "The unique identifier of the session. This identifier is recovered by executing the PUT /device/{deviceId}/session operation.",
                            "paramType": "header",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "path",
                            "description": "The full path of the executable file to run.",
                            "paramType": "query",                            
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "parameters",
                            "description": "The parameters to be passed to the executable, separated by comma(,).",
                            "paramType": "query",                            
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "context",
                            "description": "Define if executable is run in context.",
                            "paramType": "query",                            
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "boolean",
							"defaultValue": true
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 404,
                            "reason": ""
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device",
            "description": "Create a new device",
            "operations": [
                {
                    "httpMethod": "PUT",
                    "summary": "Create a new device",
					"notes": "This operation creates a new device in the Client Management database.",
                    "responseClass": "DeviceCreate: This class returns the operation result and if successful the ID of the newly created device.",
                    "nickname": "createDevice",
                    "parameters": [
                        {                         
                            "description": "Descriptive Snippet",
                            "paramType": "body",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "DeviceData"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}",
            "description": "Set attribute values",
            "operations": [
                {
                    "httpMethod": "PUT",
                    "summary": "Set attribute values",
                    "notes": "This operation adds or modifies the attribute values of a specific device. Multiple values are not allowed. The date must be entered as a timestamp.",
                    "responseClass": "DeviceUpdate: This class provides the operation success and lists all parameters that were added or updated on the device.",
                    "nickname": "updateDevice",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {                         
                            "description": "Descriptive Snippet",
                            "paramType": "body",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "DeviceAttributes"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 404,
                            "reason": "Error Codes: 10 or 13 or 25 or 16002."
                        }
                    ]
                }
            ]
    },    
    {
            "path": "/device/{deviceId}/financial",
            "description": "Set financial attribute values",
            "operations": [
                {
                    "httpMethod": "PUT",
                    "summary": "Set financial attribute values",
                    "notes": "This operation adds or modifies financial attributes of device. Multiple values are not allowed.",
                    "responseClass": "DeviceFinancialAttributes: This class returns all financial attributes and their values of a specific device.",
                    "nickname": "updateDeviceFinancial",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {                         
                            "description": "Descriptive Snippet",
                            "paramType": "body",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "DeviceFinancialAttributes"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 404,
                            "reason": "Error Codes: 1"
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/windows/registry/key",
            "description": "Create windows registry key",
            "operations": [
                {
                    "httpMethod": "PUT",
                    "summary": "Create windows registry key",
                    "notes": "This operation allows you to create a new Windows registry key. Use double slash (//) for the registry path. Depending on the Windows operating system version accessing registry root keys like HKEY_CLASSES_ROOT, HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_USERS, HKEY_CURRENT_CONFIG HKLM may require additional administrator privileges.",
                    "responseClass": "DeviceOperationResult: This class returns the final status of the executed operation, that is if it was successful or not, and if not the corresponding",
                    "nickname": "createDeviceRegistryPath",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "Session-Id",
                            "description": "The unique identifier of the session. This identifier is recovered by executing the PUT /device/{deviceId}/session operation.",
                            "paramType": "header",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "body",
                            "description": "Descriptive Snippet",
                            "paramType": "body",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "DeviceRegistryPath"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/windows/registry/value",
            "description": "Create a registry key value",
            "operations": [
                {
                    "httpMethod": "PUT",
                    "summary": "Create a registry key value",
                    "notes": "This operation allows you to create a new Windows registry key value. Use double slashes (//) for the registry path. Depending on the Windows operating system version accessing registry root keys like HKEY_CLASSES_ROOT, HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_USERS, HKEY_CURRENT_CONFIG HKLM may require additional administrator privileges.",
                    "responseClass": "DeviceOperationResult: This class returns the final status of the executed operation, that is if it was successful or not, and if not the corresponding",
                    "nickname": "createDeviceRegistryValue",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "Session-Id",
                            "description": "The unique identifier of the session. This identifier is recovered by executing the PUT /device/{deviceId}/session operation.",
                            "paramType": "header",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "body",
                            "description": "Descriptive Snippet",
                            "paramType": "body",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "DeviceRegistryPathValue"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/inventory/patch/scan",
            "description": "Launch a patch scan",
            "operations": [
                {
                    "httpMethod": "PUT",
                    "summary": "Launch a patch scan",  
					"notes": "This operation launches a patch scan on a device.",					
                    "responseClass": "DeviceScanResult: This class returns the result of a patch inventory scan on a specific device.",
                    "nickname": "launchDeviceScan",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "forceupload",
                            "description": "Define if the inventory is to be uploaded directly after generation.",
                            "paramType": "query",                          
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "boolean",
                            "defaultValue": "false"
                        },
                        {
                            "name": "differencial",
                            "description": "Defines if only those parts of the inventory are uploaded that have changed since the last upload.",
                            "paramType": "query",                          
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "boolean",
                            "defaultValue": "false"
                        }                        
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/object/{objectId}/inst",
            "description": "Create an instance of an inventory object type",
            "operations": [
                {
                    "httpMethod": "PUT",
                    "summary": "Create an instance of an inventory object type",
					"notes": "This operation adds an instance for an inventory object type for a specific device, for example a new object type to the custom inventory.",
                    "responseClass": "InventoryInstCreate: This class returns the result when adding an object type to an inventory of a specific device, for example a new object type to the custom inventory",
                    "nickname": "putDeviceObjectInst",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "objectId",
                            "description": "The unique Client Management database identifier of the object type of which an instance is to be added. This identifier is returned by the GET /objects or PUT /object operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
     },
     {
            "path": "/device/{deviceId}/object/{objectId}/inst/{instId}/attrs",
            "description": "Modify attribute values of an inventory object type instance",
            "operations": [
                {
                    "httpMethod": "PUT",
                    "summary": "Modify attribute values of an inventory object type instance",
					"notes": "This operation allows you to specify the parameters values for an inventory object type instance of a device, for example the parameter values of a newly added custom inventory object type.",
                    "responseClass": "DeviceOperationResult: This class returns the final status of the executed operation, that is if it was successful or not, and if not the corresponding",
                    "nickname": "deleteDeviceObjectInst",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "objectId",
                            "description": "The unique Client Management database identifier of the object type of which an instance is to be added. This identifier is returned by the GET /objects or PUT /object operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "instId",
                            "description": "The unique Client Management database identifier of the object type instance for which the attribute values are to be specified. This identifier is returned by one of the following operations: GET /device/{deviceId}/object/{objectId}/inst or PUT /device/{deviceId}/object/{objectId}/inst.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {                         
                            "description": "Descriptive Snippet",
                            "paramType": "body",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "DeviceInventoryAttrs"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
     },
     {
            "path": "/device/{deviceId}/oprule/{opruleId}",
            "description": "Assign an operational rule to a device",
            "operations": [
                {
                    "httpMethod": "PUT",
                    "summary": "Assign an operational rule to a device",   
					"notes": "This operation assigns an operational rule to a device.",
                    "responseClass": "DeviceOperationResult: This class returns the final status of the executed operation, that is if it was successful or not, and if not the corresponding",
                    "nickname": "assignOperationalRuleToDevice",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "opruleId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "fp",
                            "description": "Defines if the operational rule to create is to be used with integrated solutions (say, footprints), at least one external integration needs to be predefined.",
                            "paramType": "query",                          
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "boolean",
                            "defaultValue": "false"
                        }                        
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/session",
            "description": "Open a session",
            "operations": [
                {
                    "httpMethod": "PUT",
                    "summary": "Open a session",    
					"notes": "This operation opens a new session on a device.",
                    "responseClass": "SessionOperationResult: This class returns the result for an open session operation.",
                    "nickname": "openSession",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },                        
                        {
                            "name": "credentials",
                            "description": "Descriptive Snippet",
                            "paramType": "body",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "SessionCredentials"
                        }               
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/fs/dir",
            "description": "Create/Rename directory at specified path.",
            "operations": [
                {
                    "httpMethod": "PUT",
                    "summary": "Create/Rename directory at specified path.",                    
                    "notes": " This operation creates a new directory or renames an existing one under the specified path.",
                    "responseClass": "DirectoryInfo: This class contains information for a spedific directory",
                    "nickname": "createrenamedir",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },         
                        {
                            "name": "Session-Id",
                            "description": "The unique identifier of the session. This identifier is recovered by executing the PUT /device/{deviceId}/session operation.",
                            "paramType": "header",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        },               
                       {
                            "name": "rename",
                            "description": "Set this to true to rename the directory, or to false to create a new one.",
                            "paramType": "query",
                            "required": true,
                            "allowMultiple": false,
                            "defaultValue": "false",
                            "dataType": "boolean"
                        },     
                        {
                            "name": "directoryInfo",
                            "description": "Descriptive Snippet",
                            "paramType": "body",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "DirectoryInfo"
                        }                         
                     ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/fs/file",
            "description": "Copy/Rename a file in the specified path.",
            "operations": [
                {
                    "httpMethod": "PUT",
                    "summary": "Copy/Rename a file in the specified path.",                    
                    "notes": "This operation renames a file in specified path or copies it to a new location.",
                    "responseClass": "FileInfo: This class contains information for a spedific file.",
                    "nickname": "copyrenamefile",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },         
                        {
                            "name": "session-Id",
                            "description": "The unique identifier of the session. This identifier is recovered by executing the PUT /device/{deviceId}/session operation.",
                            "paramType": "header",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        },                      
                        {
                            "name": "copy",
                            "description": "Set this parameter to true to copy the file, or to false to rename it.",
                            "paramType": "query",
                            "required": true,
                            "allowMultiple": false,
                            "defaultValue": "true",
                            "dataType": "boolean"
                        },
                        {
                            "name": "rename",
                            "description": "Set this parameter to true to rename the file, or to false to copy it.",
                            "paramType": "query",
                            "required": true,
                            "allowMultiple": false,
                            "defaultValue": "false",
                            "dataType": "boolean"
                        },            
                        {
                            "name": "fileInfo",
                            "description": "Descriptive Snippet",
                            "paramType": "body",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "FileInfo"
                        }                           
                      ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/user",
            "description": "Create a relationship between specified device and user.",
            "operations": [
                {
                    "httpMethod": "PUT",
                    "summary": "Create a relationship between specified device and user.",                    
                    "notes": "This operation creates a relationship between specified device and user.",
                    "responseClass": "DeviceUserInfo: This class returns the result of create relationship between device and user operation.",
                    "nickname": "DeviceUser",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },         
                        {
                            "name": "userId",
                            "description": "The unique Client Management database ID of the user. This value is returned by either the GET /user/users or the GET /user/group/{groupId}/users operation.",
                            "paramType": "query",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },         
                        {
                            "name": "relationtype",
                            "description": "Select from this drop-down box the relation type to be created between the device and the user.",
                            "paramType": "query",
                            "defaultValue": "_REL_PRIMARY_",
                            "allowableValues": {
                                "valueType": "LIST",
                                "values": [
                                    "_REL_PRIMARY_", 
                                    "_REL_SECONDARY_" 
                                ]
                            },
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        }, 
                        {
                            "name": "autoupdate",
                            "description": "Set this flag to false to enable automatic relationship update from agent running on the device.",
                            "paramType": "query",
                            "defaultValue": true,
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "boolean"
                        }
                      ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/user/update",
            "description": "Update an existing  relationship between specified device and user.",
            "operations": [
                {
                    "httpMethod": "PUT",
                    "summary": "Update an existing  relationship between specified device and user.",                    
                    "notes": "This operation updates an existing relationship between specified device and user.",
                    "responseClass": "DeviceUserUpdateInfo: This class returns the result of update relationship between device and user operation.",
                    "nickname": "DeviceUserUpdate",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },         
                        {
                            "name": "userId",
                            "description": "The unique Client Management database ID of the user. This value is returned by either the GET /user/users or the GET /user/group/{groupId}/users operation.",
                            "paramType": "query",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },         
                        {
                            "name": "relationupdateinfo",
                            "paramType": "body",
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "DeviceUserRelationUpdateInfo"
                        }
                      ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/process/{processIds}",
            "description": "Terminate one or more processes",
            "operations": [
                {
                    "httpMethod": "DELETE",
                    "summary": "Terminate one or more processes",
                    "notes": "This operation terminates one or more processes on a specific device. Multiple values of process ids are allowed, separated by comma.",
                    "responseClass": "DeviceTerminateResult: This class returns if one or more processes could be terminated.",
                    "nickname": "terminateprocessDevice",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },    
                        {
                            "name": "Session-Id",
                            "description": "The unique identifier of the session. This identifier is recovered by executing the PUT /device/{deviceId}/session operation.",
                            "paramType": "header",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "processIds",
                            "description": "The list of process Ids separated by comma(,). The process Ids are returned by the GET /device/{deviceId}/processes operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 404,
                            "reason": ""
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}",
            "description": "Delete a device",
            "operations": [
                {
                    "httpMethod": "DELETE",
                    "summary": "Delete a device",
                    "notes": "This operation deletes a specific device from the Client Management database.",
                    "responseClass": "DeviceOperationResult: This class returns the final status of the executed operation, that is if it was successful or not, and if not the corresponding",
                    "nickname": "deleteDevice",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "forceDelete",
                            "description": "Remove any association in the same time.",
                            "paramType": "query",
                            "required": false,
                            "allowMultiple": false,
                            "dataType": "boolean",
                            "defaultValue": "false"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/windows/registry/key",
            "description": "Delete a Windows registry key",
            "operations": [
                {
                    "httpMethod": "DELETE",
                    "summary": "Delete a Windows registry key",
                    "notes": "This operation deletes a Windows registry key. Use only single slashes (/) in the registry path. Depending on the Windows operating system version accessing registry root keys like HKEY_CLASSES_ROOT, HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_USERS, HKEY_CURRENT_CONFIG HKLM may require additional administrator privileges.",
                    "responseClass": "DeviceOperationResult: This class returns the final status of the executed operation, that is if it was successful or not, and if not the corresponding",
                    "nickname": "deleteRegistyKeyDevice",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "Session-Id",
                            "description": "The unique identifier of the session. This identifier is recovered by executing the PUT /device/{deviceId}/session operation.",
                            "paramType": "header",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "path",
                            "description": "The full path of the registry key to delete.",
                            "paramType": "query",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/windows/registry/value",
            "description": "Delete a Windows registry key value",
            "operations": [
                {
                    "httpMethod": "DELETE",
                    "summary": "Delete a Windows registry key value",
                    "notes": "This operation deletes a Windows registry value. Use only single slashes (/) in the registry path. Depending on the Windows operating system version accessing registry root keys like HKEY_CLASSES_ROOT, HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_USERS, HKEY_CURRENT_CONFIG HKLM may require additional administrator privileges.",
                    "responseClass": "DeviceOperationResult: This class returns the final status of the executed operation, that is if it was successful or not, and if not the corresponding",
                    "nickname": "deleteRegistyValueDevice",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "Session-Id",
                            "description": "The unique identifier of the session. This identifier is recovered by executing the PUT /device/{deviceId}/session operation.",
                            "paramType": "header",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "path",
                            "description": "The full Path to the registry key value to delete.",
                            "paramType": "query",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "name",
                            "description": "The name of the registry value to delete.",
                            "paramType": "query",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/object/{objectId}/inst/{instId}",
            "description": "Delete an instance of an inventory object type",
            "operations": [
                {
                    "httpMethod": "DELETE",
                    "summary": "Delete an instance of an inventory object type",
					"notes": "This operation deletes a specific instance of an inventory object type on a device, for example a third instance of a custom inventory object type on the device that has become obsolete.",
                    "responseClass": "DeviceOperationResult: This class returns the final status of the executed operation, that is if it was successful or not, and if not the corresponding",
                    "nickname": "deleteDeviceObjectInst",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "objectId",
                            "description": "The unique Client Management database identifier of the object type of which an instance is to be added. This identifier is returned by the GET /objects or PUT /object operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "instId",
                            "description": "The unique Client Management database identifier of the object type instance which is to be deleted. This identifier is returned by one of the following operations: GET /device/{deviceId}/object/{objectId}/inst or PUT /device/{deviceId}/object/{objectId}/inst.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/fs/dir",
            
            "description": "Delete a specific directory.",
            "operations": [
                {
                    "httpMethod": "DELETE",
                    "summary": "Delete a specific directory.",
                    "responseClass": "DeviceDeleteDir: This class contains result of the directory delete operation.",
                    "notes": "This operation deletes a specific directory.",
                    "nickname": "getDeviceObjectFSDirDelete",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "session-Id",
                            "description": "The unique identifier of the session. This identifier is recovered by executing the PUT /device/{deviceId}/session operation.",
                            "paramType": "header",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "path",
                            "description": "The complete path of the directory to be deleted. Use double backslashes (\\) in the path.",
                            "paramType": "query",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/fs/file",
            
            "description": "Delete a specific file.",
            "operations": [
                {
                    "httpMethod": "DELETE",
                    "summary": "Delete a specific file.",
                    "notes": "This operation deletes a specific file.",
                    "responseClass": "DeviceDeleteFile: This class contains result of the file delete operation.",
                    "nickname": "getDeviceObjectFSFileDelete",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },
                        {
                            "name": "session-Id",
                            "description": "The unique identifier of the session. This identifier is recovered by executing the PUT /device/{deviceId}/session operation.",
                            "paramType": "header",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        },
                        {
                            "name": "path",
                            "description": "The complete path of the file to be deleted. Use double backslashes (\\\\) in the path.",
                            "paramType": "query",
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "string"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/financial/attachment",
            "description": "This operation delete(s) an attachment(s) for a device in Financial Asset Management module.",
            "operations": [
                {
                    "httpMethod": "DELETE",
                    "summary": "This operation delete(s) an attachment(s) for a device in Financial Asset Management module.",
					"notes": "This operation delete(s) an attachment(s) for a device in Financial Asset Management module.",
                    "responseClass": "DeviceFamAttach: This class returns the final status of the executed operation, that is if it was successful or not.",
                    "nickname": "fetchDeviceFamAttach",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },                        
                        {
                            "name": "attachmentId",
                            "description": "The unique Client Management database ID of the attachment to a device in Financial Asset Management module. This value is returned by the GET /device/{deviceId}/financial/attachment operation. For multiple attachment deletion use comma(,) as separator",
                            "paramType": "query",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    },
    {
            "path": "/device/{deviceId}/user",
            "description": "This operation delete(s) user(s) associated with a device.",
            "operations": [
                {
                    "httpMethod": "DELETE",
                    "summary": "This operation delete(s) user(s) associated with a device.",
					"notes": "This operation delete(s)  user(s) associated with a device.",
                    "responseClass": "DeviceUserDelete: This class returns the final status of the executed operation, that is if it was successful or not.",
                    "nickname": "fetchDeviceUserDelete",
                    "parameters": [
                        {
                            "name": "deviceId",
                            "description": "The unique Client Management database ID of the device. This value is returned by either the GET /devices or the GET /device operation.",
                            "paramType": "path",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        },                        
                        {
                            "name": "userId",
                            "description": "The unique Client Management database ID of the user associated with a device. This value is returned by either the GET /user/users or the GET /user/group/{groupId}/users operation. For multiple user deletion use comma(,) as separator.",
                            "paramType": "query",                          
                            "required": true,
                            "allowMultiple": false,
                            "dataType": "int"
                        }
                    ],
                    "errorResponses": [
                        {
                            "code": 400,
                            "reason": "Invalid data provided."
                        }
                    ]
                }
            ]
    }
    ],
    "models": { 
        "DeviceOperationResult": {
            "id": "DeviceOperationResult",
            "properties": {
                "ErrorCode": {
                    "type": "int",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },
        "DeviceResult": {
            "id": "DeviceResult",
            "properties": {
                "Result": {
                    "type": "int",
					"description": "Returns number of pings sent before the device answered."
                },
                "ErrorCode": {
                    "type": "int",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
				}
            }
        },
        "DeviceScan": {
            "id": "DeviceScan",
            "properties": {
                "ForceUpload": {
                    "type": "boolean",
					"description": "Specifies if the results of the forced scan are to be uploaded directly or at the regular scheduled time."
                },
                "DifferencialUpload": {
                    "type": "boolean",
					"description": "Specifies if the inventory is to be completely replaced which each upload when differences are detected or only the delta, i.e., the modifications of the inventory. If the inventory template is changed the next inventory will always be a complete inventory, even if this option is activated."
                }
            }
        },
        "DeviceScanResult": {
            "id": "DeviceScanResult",
            "properties": {
                "Result": {
                    "items": {
                        "$ref": "DeviceScan"
                    },
                    "type": "object"
                },
                "ErrorCode": {
                    "type": "int",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },        
        "DeviceTerminateResult": {
            "id": "DeviceTerminateResult",            
            "description": "This class returns if one or more processes could be terminated.",            
            "properties": {                
                "ProcessID": {                   
                    "type": "List[int]",
                    "description": "The comma separated list of process IDs that could be terminated."
                },
                "ErrorCode": {
                    "type": "int",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },
        "DeviceExit": {
            "id": "DeviceExit",
            "properties": {
                "DeviceID": {
                    "type": "int",
					"description": "The unique Client Management database ID of the device. Device Ids can be fetched using GET /devices web service."
                },
                "HowToExit": {
                    "type": "string",
					"description": "Shows the type of shutdown operation executed on the device, that is, if it was completely shut down or rebooted."
                }
            }
        },       
        "DeviceExitInfo": {
            "id": "DeviceExitInfo",
            "properties": {
                "DeviceExit": {
                    "items": {
                        "$ref": "DeviceExit"
                    },
                    "type": "Array"
                },                
                "ErrorCode": {
                    "type": "int",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },        
        "DeviceRegistryKey": {
            "id": "DeviceRegistryKey",
            "properties": {
                "name": {
                    "type": "string",
					"description": "The name of the registry key."
                }
            }
        },       
        "DeviceRegistryKeys": {
            "id": "DeviceRegistryKeys",
            "properties": {
                "key": {
                    "items": {
                        "$ref": "DeviceRegistryKey"
                    },
                    "type": "Array"
                }
            }
        },
        "DeviceRegistryValue": {
            "id": "DeviceRegistryValue",
            "properties": {
                "Name": {
                    "type": "string",
					"description": "The name of the registry value."
                },
                "Type": {
                    "type": "string",
					"description": "The type of the registry value."
                },
                "Data": {
                    "type": "string",
					"description": "The actual data of the registry value."
                }
            }
        },       
        "DeviceRegistryValues": {
            "id": "DeviceRegistryValues",
            "properties": {
                "key": {
                    "items": {
                        "$ref": "DeviceRegistryValue"
                    },
                    "type": "Array"
                }
            }
        },
        "DeviceCategoryValues": {
            "id": "DeviceCategoryValues",
            "properties": {
                "NtEventCategoryName": {
                    "type": "string",
					"description": "The name of the event category."
                },
                "NtEventCategoryType": {
                    "type": "string",
					"description": "The type of the event category."
                },
                "NtEventCategoryDesc": {
                    "type": "string",
					"description": "A description of the event category."
                },
                "NtEventCategorySize": {
                    "type": "int",
					"description": "The size of the category."
                }
            }
        },       
        "DeviceCategoryResultValues": {
            "id": "DeviceCategoryResultValues",
            "properties": {
                "key": {
                    "items": {
                        "$ref": "DeviceCategoryValues"
                    },
                    "type": "LIST"
                },                              
                "ErrorCode": {
                    "type": "int",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },
        "DeviceWindowsEvent": {
            "id": "DeviceWindowsEvent",
            "properties": {
                "NtEventType": {
                    "type": "string",
					"description": "The type of event."
                },
                "NtEventDateTime": {
                    "type": "string",
					"description": "The date and time at which the event occurred."
                },
                "NtEventSource": {
                    "type": "string",
					"description": "The source of the event."
                },
                "NtEventCatagory": {
                    "type": "int",
					"description": "The category of the event."
                },
                "NtEventID": {
                    "type": "int",
					"description": "The unique ID of the event."
                },
                "NtEventUser": {
                    "type": "string",
					"description": "The user who was logged on to the device when the event occurred."
                },
                "NtEventDescription": {
                    "type": "string",
					"description": "A description of the event."
                }
            }
        },       
        "DeviceWindowsEventResult": {
            "id": "DeviceWindowsEventResult",
            "properties": {
                "Values": {
                    "items": {
                        "$ref": "DeviceWindowsEvent"
                    },
                    "type": "LIST"
                },    
                "Offset": {
                    "type": "int",
					"description": "The offset for the pagination."
                },
                "Count": {
                    "type": "int",
					"description": "The number of entries to return."
                },
                "NtEventIndex": {
                    "type": "int",
					"description": "The index number that was assigned to the event."
                },
                "Total": {
                    "type": "int",
					"description": "The total number of devices found matching the search query."
                },                
                "ErrorCode": {
                    "type": "int",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },
        "DeviceServiceInfo": {
            "id": "DeviceServiceInfo",
            "properties": {
                "Services": {
                    "items": {
                        "$ref": "DeviceService"
                    },
                    "type": "Array"
                },     
                "Total": {
                    "type": "int",
					"description": "The total number of services found on the device."
                }
            }
        },
        "DeviceService": {
            "id": "DeviceService",
            "properties": {
                "name": {
                    "type": "string",
					"description": "The internal name of the service."
                },
                "displayName": {
                    "type": "string",
					"description": "A explicit name of the service name, i.e. Windows Update, instead of wuauserv."
                },                
                "currentState": {
                    "type": "string",
					"description": "The current status of the service."
                },
                "binaryPath": {
                    "type": "string",
					"description": "The path where binary is placed."
                },
                "description": {
                    "type": "string",
					"description": "A description of the service."
                },
                "startName": {
                    "type": "string",
					"description": "Start name of the service."
                },
                "start": {
                    "type": "string",
					"description": "Start status of service."
                }
            }
        },
        "DeviceData": {
            "id": "DeviceData",
            "description": "This class defines the name of the new device to create.",
            "properties": {
                "name": {
                    "type": "string",
					"description": "The user-friendly name under which the new device is to be created in the Client Management database."
                }
            }
        },
        "DeviceCreate": {
            "id": "DeviceCreate",
            "properties": {
                "ObjectId": {
                    "type": "int",
					"description": "The unique identifier with which the new device will be created in the Client Management database."
                },
                "ErrorCode": {
                    "type": "string",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },
        "DeviceRegistryPath": {
            "id": "DeviceRegistryPath",
            "properties": {
                "path": {
                    "type": "string",
					"description":"The complete path to the registry key."
                }
            }
        },
        "DeviceRegistryPathValue": {
            "id": "DeviceRegistryPathValue",
            "properties": {
                "path": {
                    "type": "string",
					"description":"The complete path to the registry key."
                },
                "name": {
                    "type": "string",
					"description":"The name of the registry value.  "
                },
                "type": {
                    "type": "string",
					"description":"The type of the registry value."
                },
                "value": {
                    "type": "string",
					"description":"The actual data of the registry value."
                }                
            }
        },
        "DeviceAttributesInfo": {
            "id": "DeviceAttributesInfo",
            "properties": {                
                "Values": {
                    "items": {
                        "$ref": "DeviceAttributes"
                    },
                    "description": "This class provides all attributs and their values that are to be updated on a specific device.",
                    "type": "LIST"
                },
                "ErrorCode": {
                    "type": "int",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },
        "DeviceAttributes": {
            "id": "DeviceAttributes",
            "description": "This class contains all attributs and their values that are to be set on a specific device.",
            "properties": {
                "_DB_ATTR_SMALLICON_": {
                    "type": "string",
					"description": "The name and relative path of the small icon file to be used to represent this device."
                },
                "_DB_ATTR_LARGEICON_": {
                    "type": "string",
					"description": "The name and relative path of the large icon file to be used to represent this device."
                },            
                "_DB_ATTR_DEVICE_FAMASSETTAG_": {
                    "type": "string",
					"description": "Unique identifier of the asset. The identifier is of not more than 64 characters."
                },                
                "_DB_ATTR_NAME_": {
                    "type": "string",
					"description": "The name of the object as known in Client Management. This can be any combination of characters."
                },
                "UserName": {
                    "type": "string",
					"description": "Login name of the current or last user connected to the device."
                },   
                "_DB_ATTR_DEV_TYPE_": {
                    "type": "string",
					"description": "The type of the device like a server, a workstation, a printer or a game console, etc."
                },
                "FAMLocation": {
                    "type": "string",
					"description": "The country/region/town/building/geographical area where the asset is located."
                },
                "_DB_ATTR_DEV_DOMAINNAME_": {
                    "type": "string",
					"description": "The full name of the domain to which device belongs to i.e., kirk.enterprise.starfleet.com."
                },
                "_DB_ATTR_DEV_NETWORKNAME_": {
                    "type": "string",
					"description": "The network name of the machine, either as its short or complete network name, eg., scotty or scotty.enterprise.com, or its IP address in dotted notation, e.g., 194.45.245.5."
                },
                "_DB_ATTR_DEV_HTTPPORT_": {
                    "type": "int",
					"description": "The port on which the HTTP server will listen for and respond."
                },
                "_DB_ATTR_DEV_HTTPCONSOLEPORT_": {
                    "type": "int",
					"description": "Port number that console uses for communication with the agent."
                },
                "_DB_ATTR_DEVICE_NETBIOSNAME_": {
                    "type": "string",
					"description": "The NetBIOS name of the client. For managed devices which have Linux or MAC OS as their operating system this entry will not be displayed."
                },
                "_DB_ATTR_DEVICE_IPADDRESS_": {
                    "type": "string",
					"description": "The IP address of the device in its dotted version, such as 194.50.68.255."
                },
                "_DB_ATTR_DEVICE_NETWORKMASK_": {
                    "type": "string",
					"description": "The subnet mask of the device in its dotted version, such as 255.255.255.0."
                },                
                "_DB_ATTR_DEVICE_MACADDRESS_": {
                    "type": "string",
					"description": "The MAC (hardware) address of the device."
                },
                "_DB_ATTR_DEVICE_HOSTID_": {
                    "type": "string",
					"description": "The host ID if the operating system is Linux or MAC OS, for Windows it must either be the asset tag or the BIOS serial number depending on the manufacturer of the client in their respective format."
                },
                "_DB_ATTR_DEVICE_DISKSERNUM_": {
                    "type": "string",
					"description": "The serial number of the hard disk of the device."
                },
                "_DB_ATTR_PARENT_": {
                    "type": "string",
					"description": "The name or the IP address of the parent of the device. In case of the master or unconnected devices this field is empty."
                },
                "_DB_ATTR_DEVICE_TOPOLOGYTYPE_": {
                    "type": "string",
					"description": "The topology type of the device, i.e. if the managed device is a master, a relay or a simple client. It may also be an unconnected, a scanned, a deprecated or an unknown device."
                },
                "_DB_ATTR_DEV_OSNAME_": {
                    "type": "string",
					"description": "The name of the operating system installed on the device."
                },
                "_DB_ATTR_DEV_OSVERMAJOR_": {
                    "type": "int",
					"description": "The major version number of the operating system installed on the device."
                },
                "_DB_ATTR_DEV_OSVERMINOR_": {
                    "type": "int",
					"description": "The minor version number of the operating system installed on the device."
                },
                "_DB_ATTR_DEV_OSREVISION_": {
                    "type": "string",
					"description": "The revision number of the operating system installed on the currently selected device."
                },                
                "_DB_ATTR_DEV_OSBUILD_": {
                    "type": "int",
					"description": "The build number of the operating system installed on the device."
                },
                "_DB_ATTR_PKGFACTORY_": {
                    "type": "boolean",
					"description": "Indicates if device is a Packager in the Package Factory, i.e. if packages may be created on it."
                },
                "_DB_ATTR_PATCHPROXY_": {
                    "type": "boolean",
					"description": "Indicates if device is serving as a Patch Manager, i.e. if it can handle MS Secure files and all other options pertaining to patch management."
                },
                "_DB_ATTR_SCANNER_": {
                    "type": "boolean",
					"description": "Indicates if device is a Scanner, i.e. if it can execute vulnerability scans on the defined target devices."
                },
                "_DB_ATTR_OSD_": {
                    "type": "boolean",
					"description": "Indicates if device is a OSD Manager, i.e. if it can create and manage operating system deployments as well as install them on the defined target devices."
                },
                "_DB_ATTR_RISCANNER_": {
                    "type": "boolean",
					"description": "Defines if the device acts as an Asset Discovery Scanner in the network."
                },
                "_DB_ATTR_ROLLOUTSRV_": {
                    "type": "boolean",
					"description": "Defines if the device acts as a rollout server for Client Management agent deployment."
                },
                "_DB_ATTR_RESTRICTDEVICETYPEUPDATE_": {
                    "type": "boolean",
					"description": "Indicates if the device type is set manually, true if manually, false if automatic."
                },                
                "_DB_ATTR_NOTES_": {
                    "type": "string",
					"description": "Free text field that may be edited to display general information about the object and its contents."
                }
            }
        },
        "DeviceUpdate": {
            "id": "DeviceUpdate",
            "properties": {
                "ObjectId": {
                    "type": "int",
					"description":"The unique Client Management identifier of an Client Management object type."
                },
                "ObjectTypeName": {
                    "type": "string",
					"description":"The internal Client Management database name under which this object type is known, for example _DB_OBJECTTYPE_DEVICEGROUP_ for a device group."
                },
                "ObjectAttrs": {
                    "items": {
                        "$ref": "DeviceAttributes"
                    },
                    "type": "object"
                },
                "ErrorCode": {
                    "type": "int",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },
        "DeviceFinancialAttributes": {
            "id": "DeviceFinancialAttributes",
            "description": "This class provides the financial attributes and their values that are to  be set on a specific device.",
            "properties": {
                "LifeCycleStatus": {
                    "type": "string",
		            "description": " The possible values are: 1. On Order: The asset was already ordered but has not yet arrived at its destination. 2. Received: The asset arrived at its destination. 3. In Stock: The asset has arrived at its destination and is currently located in the warehouse. 4. Deployed: The asset is installed at its final destination. 5. Retired: The asset has arrived at the end of its life-cycle and was removed from the network. 6. Custom Status: This is a custom life-cycle status; there can be any number of custom status values.",
                    "allowableValues":{
                      "valueType":"LIST",
                      "values":[
                        "On Order",
                        "Received",
                        "In Stock",
                        "Deployed",
                        "Retired",
                        "Custom Status"
                      ]
                    }
                },
                "AssetUser": {
                    "type": "string",
					"description": "The owner of asset."
                },
                "AssetAdmin": {
                    "type": "string",
					"description": "The support contact responsible for this asset."
                },
                "Department": {
                    "type": "string",
					"description": "The department that is responsible for this device. The department is represented by a user group."
                },                
                "Vendor": {
                    "type": "string",
					"description": "The name of the vendor of asset, e.g., Hewlett Packard, Dell etc."
                },
                "VendorSKU": {
                    "type": "string",
					"description": "The unique identifier of this asset as assigned by its vendor (stock-keeping unit)."
                },                
                "PONumber": {
                    "type": "string",
					"description": "The purchase order number for the asset."
                },
                "WarrantyExpirationDate": {
                    "type": "string",
					"description": "The date at which the warranty for the asset expires, in the form of ."
                },
                "WarrantyCost": {
                    "type": "float",
					"description": "The total cost for the warranty contract of the asset."
                },
                "SupportCost": {
                    "type": "float",
					"description": "The total cost for the support contract of the asset."
                },
                "SupportProvider": {
                    "type": "string",
					"description": "The name of the company that provides the support for this asset."
                },
                "SupportProviderPhoneNumber": {
                    "type": "string",
					"description": "The support provider's phone number."
                },
                "PurchaseDate": {
                    "type": "string",
					"description": "The purchase date of the asset."
                },
                "DateReceived": {
                    "type": "string",
					"description": "The date at which the asset arrived at its destination."
                },
                "ServiceStartDate": {
                    "type": "string",
					"description": "The date at which the asset went online, that is, when it was finally up and running."
                },
                "PurchaseCostofAsset": {
                    "type": "float",
					"description": "The total purchasing costs of the asset."
                },
                "ResidualValue": {
                    "type": "int",
					"description": "The currently remaining value of the asset. The residual value is an estimate of the value of the asset at the time it will be sold or disposed of; it may be zero. Residual value is also known as scrap value or salvage value."
                },
                "UsefulLife": {
                    "type": "int",
					"description": "The total amount of time that the asset is expected to be up and working in your network in months from the service start date onwards."
                },
                "LeaseCostofAsset": {
                    "type": "float",
					"description": "The total costs for the lease of the asset."
                },
                "LeaseTerm": {
                    "type": "int",
					"description": "The time in months for the lease contract."
                },
                "IsPurchased": {
                    "type": "boolean",
					"description": "Indicates if the device was purchased or leased, true if purchased, false if leased."
                },                
                "DepreciationType": {
                    "type": "string",
					"description": "The method used to calculate the costs: 1. Straight Line: the most often used method, in which the company estimates the residual value of the asset at the end of the period during which it will be used to generate revenues (useful life) and will expense a portion of original cost in equal increments over that period. 2. Declining Balance: the book value is multiplied by a fixed rate."  
				},
                "SupportExpirationDate": {
                    "type": "string",
					"description": "The date at which the support contract for the asset runs out."
                },
                "FAMLocation": {
                    "type": "string",
					"description": "The country/region/town/building/ geographical area at which the asset is located."
                },
                "AssetTag": {
                    "type": "string",
					"description": "The unique identifier of the asset. The identifier may have no more than 64 characters."
                },
                "InvoiceNumber": {
                    "type": "string",
					"description": "Number of the invoice."
                },
                "RestrictLCSUpdate": {
                    "type": "boolean",
					"description": "Indicates if the life cycle status is set manually, true if manually, false if automatic."
                },                
                "InvoiceDate": {
                    "type": "string",
					"description": "Date of the invoice."
                }
            }
        },
        "DeviceAssetFinancialSummary": {
            "id": "DeviceAssetFinancialSummary",
            "properties": {                
                "Summary": {
                    "items": {
                        "$ref": "DeviceAssetFinancial"
                    },
                    "type": "object"
                },
                "ErrorCode": {
                    "type": "int",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },
        "KeywordTranslation": {
            "id": "KeywordTranslation",
            "properties": {
                "PurchaseCostofAsset": {
                    "type": "string",
					"description": "PurchaseCostofAsset translated to the target language."
                },
                "ServiceStartDate": {
                    "type": "string",
					"description": "ServiceStartDate translated to the target language."
                },
                "SupportProvider": {
                    "type": "string",
					"description": "SupportProvider translated to the target language."
                },
                "SupportExpirationDate": {
                    "type": "string",
					"description": "SupportExpirationDate translated to the target language."
                },
                "WarrantyExpirationDate": {
                    "type": "string",
					"description": "WarrantyExpirationDate translated to the target language."
                },
                "ResidualValue": {
                    "type": "string",
					"description": "ResidualValue translated to the target language."
                },                
                "ActualCost": {
                    "type": "string",
					"description": "ActualCost translated to the target language."
                }
            }
        },
        "DeviceAssetFinancial": {
            "id": "DeviceAssetFinancial",
            "properties": {
                "PurchaseCostofAsset": {
                    "type": "float",
					"description": "The total purchasing cost of the asset."
                },
                "ServiceStartDate": {
                    "type": "string",
					"description": "The date at which the  asset went online, i.e., when it was finally up and running."
                },
                "SupportProvider": {
                    "type": "string",
					"description": "Company that provides the support for this asset."
                },
                "SupportExpirationDate": {
                    "type": "string",
					"description": "The date at which the support contract for the asset runs out."
                },
                "WarrantyExpirationDate": {
                    "type": "string",
					"description": "Date at which the warranty for the asset expires."
                },
                "ResidualValue": {
                    "type": "float",
					"description": "Currently remaining value of the asset. The residual value is an estimate of the value of the asset at the time it will be sold or disposed of; it may be zero. Residual value is also known as scrap value or salvage value."
                },                
                "ActualCost": {
                    "type": "float",
					"description": "The cost after the depreciation taken into consideration."
                },                
                "KeywordTranslation": {
                    "items": {
                        "$ref": "KeywordTranslation"
                    },
                    "type": "object"
                }
            }
        },
        "DeviceAssetSummaryResult": {
            "id": "DeviceAssetSummaryResult",
            "properties": {                
                "Summary": {
                    "items": {
                        "$ref": "DeviceAssetSummary"
                    },
                    "type": "object"
                },
                "ErrorCode": {
                    "type": "int",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },
        "DeviceAssetSummary": {
            "id": "DeviceAssetSummary",
            "properties": {
                "DEVICEID": {
                    "type": "string",
					"description": "The unique Client Management database ID of the device. Device Ids can be fetched using GET /devices web service."
                },
                "DEVICENAME": {
                    "type": "string",
					"description": "The name of the device as known in the Client Management database."
                },
                "IPADDRESS": {
                    "type": "string",
					"description": "The IP address of the device in its dotted version, such as 194.50.68.255."
                },
                "MACADDRESS": {
                    "type": "string",
					"description": "The MAC (hardware) address of the device."
                },
                "TOPOLOGYTYPE": {
                    "type": "string",
					"description": "The topology type of the device, i.e. if the managed device is a master, a relay or a simple client. It may also be an unconnected, a scanned, a deprecated or an unknown device."
                },
                "VIMMACHINEVENDOR": {
                    "type": "string",
					"description": "Defines the type of virtual machine running on the host, i.e. the name of the software used."
                },
                "HYPERVISORVENDOR": {
                    "type": "string",
					"description": "Name of the virtualizing software if the agent device hosts a hypervisor otherwise it will be empty."
                },
                "MANUFACTURER": {
                    "type": "string",
					"description": "The name of the manufacturer of the device."
                },
                "MODEL": {
                    "type": "string",
					"description": "The computer system model."
                },
                "SERIALNUMBER": {
                    "type": "string",
					"description": "The serial number of the hard disk of the device."
                },
                "LASTUPDATE": {
                    "type": "string",
					"description": "The date and time at which the device information was last updated."
                },
                "TOTALDISK": {
                    "type": "string",
					"description": "The total size of all disks of the device."
                },
                "LOGICALDISKSSPACE": {
                    "type": "string",
					"description": "The list of all sizes of all logical disks, separated by a colon (,)."
                },
                "LOGICALDISKSFREESPACE": {
                    "type": "string",
					"description": "The list of all free space of all logical disks, separated by a colon (,)."
                },
                "PROCESSOR": {
                    "type": "string",
					"description": "The name of the processor."
                },
                "VIDEOCONTROLLER": {
                    "type": "string",
					"description": "The description of the video controller."
                },
                "TOTALMEMORY": {
                    "type": "string",
					"description": "The total memory of the device."
                },
                "NBOFPROCESSORS": {
                    "type": "string",
					"description": "The total number of processors of the device."
                },
                "PHYSICALMEMORY": {
                    "type": "string",
					"description": "The total physical memory of the device."
                },
                "NETWORKADAPTER": {
                    "type": "string",
					"description": "The list of all network adapters, of which either the IP address is not empty and the Network Adapter Configuration Description is not equal to Virtual or Loopback."
                },
                "DOMAINNAME": {
                    "type": "string",
					"description": "The full name of the domain to which device belongs to i.e., kirk.enterprise.starfleet.com."
                },
                "OPERATINGSYSTEMNAME": {
                    "type": "string",
					"description": "The name of the operating system installed on the device."
                },
                "OPERATINGSYSTEMVERSION": {
                    "type": "string",
					"description": "The version of the operating system composed of its major, minor and build number."
                },
                "LASTLOGGEDINUSER": {
                    "type": "string",
					"description": "Login name of the current or last user connected to the device."
                }
            }
        },
        "DeviceAssetSoftwareSummary": {
            "id": "DeviceAssetSoftwareSummary",
            "properties": {                
                "_DB_OBJECTTYPCLASS_SOFTWAREINVENTORY_": {
                    "items": {
                        "$ref": "DeviceAssetSoftware"
                    },
                    "type": "LIST"
                },
                "ErrorCode": {
                    "type": "int",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },
        "SoftwareKeywordTranslation": {
            "id": "SoftwareKeywordTranslation",
            "properties": {
                "Name": {
                    "type": "string",
					"description": "Name translated to the target language."
                },
                "Version": {
                    "type": "string",
					"description": "Version translated to the target language."
                },
                "Software Manufacturer": {
                    "type": "string",
					"description": "Software Manufacturer translated to the target language."
                },
                "SupportExpirationDate": {
                    "type": "string",
					"description": "SupportExpirationDate translated to the target language."
                },
                "Type": {
                    "type": "string",
					"description": "Type translated to the target language."
                },
                "Installation Directory": {
                    "type": "string",
					"description": "Installation Directory translated to the target language."
                }
            }
        },
        "DeviceAssetSoftware": {
            "id": "DeviceAssetSoftware",
            "properties": {
                "Name": {
                    "type": "string",
					"description": "The name of the application as extracted from the installed software translation file. This is usually the complete product name, not including manufacturer or version information, for example, FinePrint 2000, InstallShield, Adobe Acrobat."  
				},
                "Version": {
                    "type": "string",
					"description": "The version string for the application as extracted from the translation file. This value generally has a mixture of digits and letters as required by the entry, for example, 3.0 Rev. B."
                },
                "Software Manufacturer": {
                    "type": "string",
					"description": "The name of the manufacturer of the application as extracted from the translation file. This is a free-form field and may contain the name by which the company is known or its complete registered name, such as Microsoft Corporation, Adobe Systems Incorporated, Software, Inc."
                },
                "Type": {
                    "type": "string",
					"description": "Type of the software, which may be Application, Web Browser, Communications, etc."
                },
                "Installation Directory": {
                    "type": "string",
					"description": "The full path of the respective installation directories."
                },
                "KeywordTranslation": {
                    "items": {
                        "$ref": "SoftwareKeywordTranslation"
                    },
                    "type": "object"
                }
            }
        },
        "DeviceFinancialUpdate": {
            "id": "DeviceFinancialUpdate",
            "properties": {                
                "ObjectAttrs": {
                    "items": {
                        "$ref": "DeviceFinancialAttributes"
                    },
                    "type": "object"
                },
                "ErrorCode": {
                    "type": "int",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },
        "DeviceInventoryAttrValue": {
            "id": "DeviceInventoryAttrValue",
            "properties": {
                "AttrName": {
                    "type": "string",
					"description":"Name of a device attribute."
                }
            }
        },  
        "DeviceInventoryInsts": {
            "id": "DeviceInventoryInsts",
            "properties": {
                "ObjectId": {
                    "type": "int",
					"description":"The unique Client Management database identifier of the device."
                },
                "ObjectName": {
                    "type": "string",
					"description":"The name of the device object."
                },
                "Object": {
                    "items": {
                        "$ref": "DeviceInventoryAttrValue"
                    },
                    "type": "List"
                },                
                "ErrorCode": {
                    "type": "int",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },
        "DeviceInventoryAttrs": {
            "id": "DeviceInventoryAttrs",
            "description": "This class provides the attribute parameters and their values that be specified for the object type on the respective device, for example the location device data for a \"Location\" custom inventory object type.",
            "properties": {
                "name": {
                    "type": "string",
					"description": "The name of the attribute and the value it is to have. Be careful to exactly write the attribute name as it is defined, paying attention to small and capital letters, otherwise the data will not be set. The list of attributes of a specific object type is returned by the GetObjectAttrsResult class of the GET /object/{objectId}/attrs operation."
                }
            }
        },
        "InventoryInstCreate": {
            "id": "InventoryInstCreate",
            "properties": {
                "instId": {
                    "type": "int",
					"description": "The unique identifier of the newly added object type instance."
                },
                "ErrorCode": {
                    "type": "string",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },
        "DeviceProcessValues": {
            "id": "DeviceProcessValues",
            "properties": {
                "ProcessOwner": {
                    "type": "string",
					"description": "The name of the owner of the process, which in most cases will be either SYSTEM for the processes started by the system or the login name of the user."
                },
                "ProcessName": {
                    "type": "string",
					"description": "The name of the process."
                },
                "ProcessPath": {
                    "type": "string",
					"description": "The full path to the executable file of the process."
                },
                "ProcessTotalCpu": {
                    "type": "string",
					"description": "The total processor time in seconds used by a process since it was started."
                },
                "ProcessCurrentCpu": {
                    "type": "int",
					"description": "The percentage of time that a process used the CPU since the last update."
                },
                "ProcessID": {
                    "type": "string",
					"description": "The numerical identifier that uniquely distinguishes a process while it runs."
                },
                "ProcessParentID": {
                    "type": "string",
					"description": "The PID of the parent process of the currently selected process is a child. The field is empty if it is not a child process."
                },
                "ProcessMemoryVirtual": {
                    "type": "int",
					"description": "The amount of virtual memory or address space committed to a process. Not applicable for Linux and Mac OS."
                },
                "ProcessMemoryUsed": {
                    "type": "int",
					"description": "The current working set of a process in KB. The current working set is the number of pages currently resident in the memory."
                },
                "ProcessThreadsCount": {
                    "type": "string",
					"description": "The number of threads running in a process. Not applicable for Linux and Mac OS."
                }
            }
        },
        "DeviceProcesses": {
            "id": "DeviceProcesses",
            "properties": {
                "Values": {
                    "items": {
                        "$ref": "DeviceProcessValues"
                    },
                    "type": "List"
                },
                "Total": {
                    "type": "int",
					"description": "The total number of devices found matching the search query."
                },                
                "ErrorCode": {
                    "type": "int",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },
        "SessionResult": {
            "id": "SessionResult",
            "properties": {
                "id": {
                    "type": "int",
					"description": "The unique Client Management database identifier of opened session"
                }
            }
        },
        "SessionOperationResult": {
            "id": "SessionOperationResult",
            "properties": {
                "session": {
                    "items": {
                        "$ref": "SessionResult"
                    },
                    "type": "object"
                },
                "ErrorCode": {
                    "type": "int",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },
        "DeviceAssetHardwareSummary": {
            "id": "DeviceAssetHardwareSummary",
            "properties": {                
                "Device": {
                    "items": {
                        "$ref": "DeviceAssetHardware"
                    },
                    "type": "LIST"
                },
                "ErrorCode": {
                    "type": "int",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },
        "HardwareKeywordTranslation": {
            "id": "HardwareKeywordTranslation",
            "properties": {
                "Network Adapter": {
                    "type": "string",
					"description": "Network Adapter translated to the target language."
                },
                "DeviceIPAddress": {
                    "type": "string",
					"description": "DeviceIPAddress translated to the target language."
                },
                "SerialNumber": {
                    "type": "string",
					"description": "SerialNumber translated to the target language."
                },
                "MostUsedUser": {
                    "type": "string",
					"description": "MostUsedUser translated to the target language."
                },
                "Type": {
                    "type": "string",
					"description": "Type translated to the target language."
                },
                "DeviceName": {
                    "type": "string",
					"description": "DeviceName translated to the target language."
                },
                "LastUpdate": {
                    "type": "string",
					"description": "LastUpdate translated to the target language."
                },
                "Domain": {
                    "type": "string",
					"description": "Domain translated to the target language."
                },
                "Model": {
                    "type": "string",
					"description": "Model translated to the target language."
                },
                "OperatingSystemName": {
                    "type": "string",
					"description": "OperatingSystemName translated to the target language."
                },
                "TopologyType": {
                    "type": "string",
					"description": "TopologyType translated to the target language."
                },
                "Device": {
                    "type": "string",
					"description": "Device translated to the target language."
                },
                "DomainName": {
                    "type": "string",
					"description": "DomainName translated to the target language."
                },
                "_DB_ATTR_VIMVENDOR_": {
                    "type": "string",
					"description": "_DB_ATTR_VIMVENDOR_ translated to the target language."
                },
                "_DB_ATTR_HYPERVISORVENDOR_": {
                    "type": "string",
					"description": "_DB_ATTR_HYPERVISORVENDOR_ translated to the target language."
                },
                "AssetUser": {
                    "type": "string",
					"description": "AssetUser translated to the target language."
                },
                "AssetAdmin": {
                    "type": "string",
					"description": "AssetAdmin translated to the target language."
                }
            }
        },
        "DeviceAssetHardware": {
            "id": "DeviceAssetHardware",
            "properties": {
                "DeviceIPAddress": {
                    "type": "string",
					"description": "The IP address of the autodiscovered device."
                },
                "MacAddress": {
                    "type": "string",
					"description": "The MAC (hardware) address of the device."
                },
                "SerialNumber": {
                    "type": "string",
					"description": "The serial number of the device."
                },
                "MostUsedUser": {
                    "type": "string",
					"description": "The User who uses the device most often."
                },
                "Type": {
                    "type": "string",
					"description": "Defines the type of event to be monitored, the values depend on the source chosen above."
                },
                "DeviceName": {
                    "type": "string",
					"description": "The name of the device to which the alert is related."
                },
                "LastUpdate": {
                    "type": "string",
					"description": "The date and time at which the patch inventory was last updated on the device to check if all its patches are up to date."
                },
                "OperatingSystemName": {
                    "type": "string",
					"description": "The operating system name of the scanned device."
                },
                "TopologyType": {
                    "type": "string",
					"description": "The topology type of the device, i.e. if the managed device is a master, a relay or a simple client. It may also be an unconnected, a scanned, a deprecated or an unknown device."
                },
                "DomainName": {
                    "type": "string",
					"description": "The full name of the device including the domain it belongs to, i.e., kirk.enterprise.starfleet.com."
                },
                "Domain": {
                    "type": "string",
					"description": "Enter into this field the name of the domain the new device should belong to, e.g., TESTLAB. If you entered a name for the workgroup above the domain value will prevail."
                },
                "Model": {
                    "type": "string",
					"description": "The computer system model."
                },
                "_DB_ATTR_VIMVENDOR_": {
                    "type": "string",
					"description": "Defines the type of virtual machine running on the host, i.e. the name of the software used. This may be either None if no virtual machine is installed on the device, VM Ware Server, Microsoft VirtualPC Server, VirtualBox or Parallels."
                },
                "_DB_ATTR_HYPERVISORVENDOR_": {
                    "type": "string",
					"description": "Displays if the agent device hosts a hypervisor, in which case this field will display the name of the virtualizing software, otherwise it will be empty."
                },
                "AssetUser": {
                    "type": "string",
					"description": "The owner of the asset."
                },
                "AssetAdmin": {
                    "type": "string",
					"description": "The support contact who is responsible for this asset."
                },
                "KeywordTranslation": {
                    "items": {
                        "$ref": "HardwareKeywordTranslation"
                    },
                    "type": "object"
                }
            }
        },
        "DeviceAssetCatalogSummary": {
            "id": "DeviceAssetCatalogSummary",
            "properties": {                
                "_DB_OBJECTTYPCLASS_SOFTWAREINVENTORY_": {
                    "items": {
                        "$ref": "DeviceAssetCatalog"
                    },
                    "type": "LIST"
                },
                "ErrorCode": {
                    "type": "int",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },
        "CatalogKeywordTranslation": {
            "id": "CatalogKeywordTranslation",
            "properties": {
                "Name": {
                    "type": "string",
					"description": "Name translated to the target language."
                },
                "Version": {
                    "type": "string",
					"description": "Version translated to the target language."
                },
                "Software Manufacturer": {
                    "type": "string",
					"description": "Software Manufacturer translated to the target language."
                },
                "Type": {
                    "type": "string",
					"description": "Type translated to the target language."
                },
                "Category": {
                    "type": "string",
					"description": "Category translated to the target language."
                }
            }
        },
        "DeviceAssetCatalog": {
            "id": "DeviceAssetCatalog",
            "properties": {
                "Name": {
                    "type": "string",
					"description": "The name of the application as extracted from the installed software translation file. This is usually the complete product name, not including manufacturer or version information, for example, FinePrint 2000, InstallShield, Adobe Acrobat."
                },
                "Version": {
                    "type": "string",
					"description": "The version string for the application as extracted from the translation file. This value generally has a mixture of digits and letters as required by the entry, for example, 3.0 Rev. B."
					
                },
                "Software Manufacturer": {
                    "type": "string",
					"description": "The name of the manufacturer of the application as extracted from the translation file. This is a free-form field and may contain the name by which the company is known or its complete registered name, such as Microsoft Corporation, Adobe Systems Incorporated, Software, Inc."
                },
                "Type": {
                    "type": "string",
					"description": "Type of the software, which may be Application, Web Browser, Communications, etc."
                },
                "Category": {
                    "type": "string",
					"description": "The category the software belongs to."
                },
                "KeywordTranslation": {
                    "items": {
                        "$ref": "CatalogKeywordTranslation"
                    },
                    "type": "object"
                }
            }
        },
        "FilteredActionsValues": {
            "id": "FilteredActionsValues",
            "properties": {
                "Ping": {
                    "type": "string",
					"description": "Ping translated to the target language."
                },
                "ConfigSummary": {
                    "type": "string",
					"description": "ConfigSummary translated to the target language."
                },
                "Reboot": {
                    "type": "string",
					"description": "Reboot translated to the target language."
                },
                "Shutdown": {
                    "type": "string",
					"description": "Shutdown translated to the target language."
                },
                "WakeUp": {
                    "type": "string",
					"description": "WakeUp translated to the target language."
                },
                "RemoteControl": {
                    "type": "string",
					"description": "RemoteControl translated to the target language."
                },
                "FileSystem": {
                    "type": "string",
					"description": "FileSystem translated to the target language."
                },
                "Registry": {
                    "type": "string",
					"description": "Registry translated to the target language."
                },
                "Events": {
                    "type": "string",
					"description": "Events translated to the target language."
                },
                "Processes": {
                    "type": "string",
					"description": "Processes translated to the target language."
                },
                "Services": {
                    "type": "string",
					"description": "Services translated to the target language."
                },
                "PerformAudit": {
                    "type": "string",
					"description": "PerformAudit translated to the target language."
                },
                "FileTransfer": {
                    "type": "string",
					"description": "FileTransfer translated to the target language."
                }
            }
        },
        "FilteredActionsResult": {
            "id": "FilteredActionsResult",
            "properties": {
                "Values": {
                    "items": {
                        "$ref": "FilteredActionsValues"
                    },
                    "type": "object"
                },
                "Ping": {
                    "type": "boolean",
					"description": "Availability status of action, true: the action is available, false: the action is not available"
                },
                "ConfigSummary": {
                    "type": "boolean",
					"description": "Availability status of action, true: the action is available, false: the action is not available"
                },
                "Reboot": {
                    "type": "boolean",
					"description": "Availability status of action, true: the action is available, false: the action is not available"
                },
                "Shutdown": {
                    "type": "boolean",
					"description": "Availability status of action, true: the action is available, false: the action is not available"
                },
                "WakeUp": {
                    "type": "boolean",
					"description": "Availability status of action, true: the action is available, false: the action is not available"
                },
                "RemoteControl": {
                    "type": "boolean",
					"description": "Availability status of action, true: the action is available, false: the action is not available"
                },
                "FileSystem": {
                    "type": "boolean",
					"description": "Availability status of action, true: the action is available, false: the action is not available"
                },
                "Registry": {
                    "type": "boolean",
					"description": "Availability status of action, true: the action is available, false: the action is not available"
                },
                "Events": {
                    "type": "boolean",
					"description": "Availability status of action, true: the action is available, false: the action is not available"
                },
                "Processes": {
                    "type": "boolean",
					"description": "Availability status of action, true: the action is available, false: the action is not available"
                },
                "Services": {
                    "type": "boolean",
					"description": "Availability status of action, true: the action is available, false: the action is not available"
                },
                "PerformAudit": {
                    "type": "boolean",
					"description": "Availability status of action, true: the action is available, false: the action is not available"
                },
                "FileTransfer": {
                    "type": "boolean",
					"description": "Availability status of action, true: the action is available, false: the action is not available"
                },
                "ErrorCode": {
                    "type": "int",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },
        "OpRuleEntry": {
            "id": "OpRuleEntry",
            "properties": {
                "ObjectId": {
                    "type": "int",
					"description":"The unique Client Management database identifier of oprule."
                },
                "ObjectName": {
                    "type": "string",
					"description": "The name of the oprule object."
                },
                "Status": {
                    "type": "string",
					"description": "The current status of oprule."
                },
                "ErrorText": {
                    "type": "string",
					"description": "Error text if any."
                },
                "Total": {
                    "type": "int",
					"description": "The total number of records fetched/returned."
                }
            }
        },
        "OpRuleHistoryResult": {
            "id": "OpRuleHistoryResult",
            "properties": {
                "Values": {
                    "items": {
                        "$ref": "OpRuleEntry"
                    },
                    "type": "object"
                },
                "Total": {
                    "type": "int",
					"description": "The total number of records fetched/returned."
                },
                "ErrorCode": {
                    "type": "int",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },
        "SessionCredentials": {
            "id": "SessionCredentials",
            "properties": {
                "credentials": {
                    "items": {
                        "$ref": "LoginPassword"
                    },
                    "type": "object"
                }
            }
        },
        "LoginPassword": {
            "id": "LoginPassword",
            "properties": {
                "user": {
                    "type": "string",
					"description": "User name or id."
                },
                "password": {
                    "type": "string",
					"description": "User password."
                }
            }
        },
        "JnlpResult": {
            "id": "JnlpResult",
            "properties": {
                "JNLPFile": {
                    "type": "string",
					"description": "The name and path to the JNLP file."
                },
                "ErrorCode": {
                    "type": "int",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },
        "DeviceFileSystemInfo": {
            "paths": "FileSystem",
            "properties": {                
                "paths": {
                    "items": {
                        "$ref": "DeviceFileSystem"
                    },
                    "type": "LIST",
                    "description": "This class returns the available information on a specific device drive."
                },
                "ErrorCode": {
                    "type": "int",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },
        "DeviceFileSystem": {
            "properties": {
                "name": {
                    "type": "string",
					"description": "The name of the drive."
                },
                "driveType": {
                    "type": "int",
					"description": "The type of drive."
                },
                "volumnName": {
                    "type": "string",
					"description": "The volume name of drive."
                }
            }
        },
        "DeviceFileSystemDirInfo": {
            "path": "FileSystem",
            "properties": {                
                "path": {
                    "items": {
                        "$ref": "DeviceFileSystemDir"
                    },
                    "type": "object"
                },
                "ErrorCode": {
                    "type": "int",
					"description": "The error code returned by the operation if the operation failed or 0 for a successful operation."
                }
            }
        },
        "DeviceFileSystemDir": {
            "properties": {
                "name": {
                    "type": "string",
					"description": "The name of the directory or file."
                },
                "isDir": {
                    "type": "boolean",
					"description": "Indicates if it is a directory or a file."
                },
                "modifiedDate": {
                    "type": "int",
					"description": "The date and time in form of a timestamp at which the file/directory was last modified."
                },
                "mode": {
                    "type": "int",
					"description": "Mode information of directory/file."
                },
                "isText": {
                    "type": "boolean",
					"description": "Indicates if the file is a text or any other type of file. This parameter is not applicable to directories."
                },
                "isHidden": {
                    "type": "boolean",
					"description": "Indicates if the file is a hidden file. This parameter is not applicable to directories."
                }
                
            }
        },
        "DeviceReadFile": {            
            "properties": {
                "paths":  {
                    "type": "string",
					"description": "The path of the file to be read."
                },
                "offset": {
                    "type": "int",
					"description": "The offset from where on to start displaying the content."
                },
                "length": {
                    "type": "int",
					"description": "The number of characters read from the file from the defined offset onwards."
                },
                "result": {
                    "type": "string",
					"description": "The content of the file from the defined offset onwards."
                }
            }
        },     
        "DeviceDeleteFile": {
        },
        "DeviceDeleteDir": {
        },
        "DirectoryInfo": {
            "id": "DirectoryInfo",
            "properties": {
                "path": {
                    "type": "string"
                },
                "newpath": {
                    "type": "string"
                }
            }
        },
        "FileInfo": {
            "id": "FileInfo",
            "properties": {
                "path": {
                    "type": "string"
                },
                "newpath": {
                    "type": "string"
                }
            }
        },        
        "DeviceFamAttach": {
            "id": "DeviceFamAttach",
            "description":"This class contains result of the attachment delete operation.",
            "properties": {  
                "total": {
                    "type": "int"
                },    
                "ErrorCode": {
                    "type": "int"
                }
            }
        },
        "DeviceFamAttachArray": {
            "id": "DeviceFamAttachArray",
            "properties": { 
                "total": {
                    "type": "int"
                },    
                "attachments": {
                    "items": {
                        "$ref": "DeviceFamAttachValues"
                    },
                    "type": "Array"
                },
                "ErrorCode": {
                    "type": "int"
                }
            }
        },
        "DeviceFamAttachValues": {
            "id": "DeviceFamAttachValues",
            "properties": {                
                    "attachments": {
                        "items":{
                            "$ref": "DeviceFamAttachValuesArray"
                        },
                        "type": "Array"
                    }
            }
        },
        "DeviceFamAttachValuesArray": {
            "id": "DeviceFamAttachValuesArray",
            "properties": {                
                "FileId": {
                    "type": "int",
                    "description": "Attachment ID."
                },
                "FileName": {
                    "type": "string",
                    "description": "Attachment file name."
                },
                "FilePath": {
                    "type": "string",
                    "description": "Attachment file path in master."
                },
                "FileSize": {
                    "type": "int",
                    "description": "Attachment file size ."
                },
                "Comments": {
                    "type": "string",
                    "description": "Notes for attachment file path in master."
                }
            }
        },
        "DeviceUserInfo": {
            "id": "DeviceUserInfo",
            "properties": {  
                "result": {
                    "type": "string"
                },    
                "ErrorCode": {
                    "type": "int"
                }
            }
        },
        "DeviceUserRelationUpdateInfo": {
            "id": "DeviceUserRelationUpdateInfo",
            "properties": {
                "relationtype": {
                    "type":"string",
					"description": "Define the new relationship to be set for device and user combination. The possible values are '_REL_PRIMARY_' and '_REL_SECONDARY_'.",
                    "allowableValues":{
                      "valueType":"LIST",
                      "values":[
                        "_REL_PRIMARY_",
                        "_REL_SECONDARY_"
                      ]
                    }
                },
                "disableautoupdate": {
                    "type":"boolean",
					"description": "Set this flag to false to enable automatic relationship update from agent running on the device. For Secondary relation type this flag should always be set to false."
                }
            }
        },
        "DeviceUserUpdateInfo": {
            "id": "DeviceUserUpdateInfo",
            "description":"This class returns the result of update relationship between device and user operation.",
            "properties": {  
                "result": {
                    "type": "string"
                },    
                "ErrorCode": {
                    "type": "int"
                }
            }
        },
        "DeviceUserDelete": {
            "id": "DeviceUserDelete",
            "description":"This class contains result of the user(s) delete operation.",
            "properties": {  
                "total": {
                    "type": "int"
                },    
                "ErrorCode": {
                    "type": "int"
                }
            }
        },
        "DeviceUserRelationsArray": {
            "id": "DeviceUserRelationsArray",
            "properties": { 
                "total": {
                    "type": "int"
                },    
                "relations": {
                    "items": {
                        "$ref": "DeviceUserRelationsValues"
                    },
                    "type": "Array"
                },
                "ErrorCode": {
                    "type": "int"
                }
            }
        },
        "DeviceUserRelationsValues": {
            "id": "DeviceUserRelationsValues",
            "properties": {                
                    "relations": {
                        "items":{
                            "$ref": "DeviceUserRelationsValuesArray"
                        },
                        "type": "Array"
                    }
            }
        },
        "DeviceUserRelationsValuesArray": {
            "id": "DeviceUserRelationsValuesArray",
            "properties": {                
                "asignId": {
                    "type": "int",
                    "description": "Device and User relationship ID."
                },
                "userId": {
                    "type": "int",
                    "description": "User ID related to device."
                },
                "username": {
                    "type": "string",
                    "description": "User name."
                },
                "userdomain": {
                    "type": "string",
                    "description": "Domain of user ."
                },
                "userlogin": {
                    "type": "string",
                    "description": "User login of the user."
                },
                "relationname": {
                    "type": "string",
                    "description": "Relationship type between device and user."
                },
                "disabledautoupdate": {
                    "type": "string",
                    "description": "Flag informing auto update setting."
                }
            }
        }
    }
}